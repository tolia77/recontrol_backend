<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/db/migrate/20251016150340_create_users.rb">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/db/migrate/20251016150340_create_users.rb" />
              <option name="originalContent" value="class CreateUsers &lt; ActiveRecord::Migration[8.0]&#10;  def change&#10;    create_table :users do |t|&#10;      t.string :username&#10;      t.string :email&#10;      t.string :password_digest&#10;      t.integer :role&#10;&#10;      t.timestamps&#10;    end&#10;  end&#10;end&#10;" />
              <option name="updatedContent" value="class CreateUsers &lt; ActiveRecord::Migration[8.0]&#10;  def change&#10;    # Ensure pgcrypto (gen_random_uuid) is available for UUID defaults&#10;    enable_extension 'pgcrypto' unless extension_enabled?('pgcrypto')&#10;    # Use UUID primary keys for users&#10;    create_table :users, id: :uuid do |t|&#10;      t.string :username&#10;      t.string :email&#10;      t.string :password_digest&#10;      t.integer :role&#10;&#10;      t.timestamps&#10;    end&#10;  end&#10;end" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/db/migrate/20251016164226_create_devices.rb">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/db/migrate/20251016164226_create_devices.rb" />
              <option name="originalContent" value="class CreateDevices &lt; ActiveRecord::Migration[8.0]&#10;  def change&#10;    create_table :devices do |t|&#10;      t.references :user, null: false, foreign_key: true&#10;      t.string :name&#10;      t.string :status&#10;      t.datetime :last_active_at&#10;&#10;      t.timestamps&#10;    end&#10;  end&#10;end&#10;" />
              <option name="updatedContent" value="class CreateDevices &lt; ActiveRecord::Migration[8.0]&#10;  def change&#10;    # Use UUID primary key for devices and reference user by UUID&#10;    create_table :devices, id: :uuid do |t|&#10;      t.references :user, null: false, foreign_key: true, type: :uuid&#10;      t.string :name&#10;      t.string :status&#10;      t.datetime :last_active_at&#10;&#10;      t.timestamps&#10;    end&#10;  end&#10;end" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/db/migrate/20251016164248_create_sessions.rb">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/db/migrate/20251016164248_create_sessions.rb" />
              <option name="originalContent" value="class CreateSessions &lt; ActiveRecord::Migration[8.0]&#10;  def change&#10;    create_table :sessions do |t|&#10;      t.references :user, null: false, foreign_key: true&#10;      t.references :device, null: true, foreign_key: true&#10;      t.string :jti&#10;      t.string :session_key&#10;      t.string :client_type&#10;      t.string :status&#10;      t.datetime :expires_at&#10;&#10;      t.timestamps&#10;    end&#10;  end&#10;end&#10;" />
              <option name="updatedContent" value="class CreateSessions &lt; ActiveRecord::Migration[8.0]&#10;  def change&#10;    # Use UUID primary key for sessions and reference user/device by UUID&#10;    create_table :sessions, id: :uuid do |t|&#10;      t.references :user, null: false, foreign_key: true, type: :uuid&#10;      t.references :device, null: true, foreign_key: true, type: :uuid&#10;      t.string :jti&#10;      t.string :session_key&#10;      t.string :client_type&#10;      t.string :status&#10;      t.datetime :expires_at&#10;&#10;      t.timestamps&#10;    end&#10;  end&#10;end" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/db/migrate/20251016184720_enable_pgcrypto_extension.rb">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/db/migrate/20251016184720_enable_pgcrypto_extension.rb" />
              <option name="originalContent" value="class EnablePgcryptoExtension &lt; ActiveRecord::Migration[8.0]&#10;  def change&#10;  end&#10;end&#10;" />
              <option name="updatedContent" value="class EnablePgcryptoExtension &lt; ActiveRecord::Migration[8.0]&#10;  def change&#10;    enable_extension 'pgcrypto' unless extension_enabled?('pgcrypto')&#10;  end&#10;end" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>